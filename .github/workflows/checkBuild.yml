name: Check Build

on:
  workflow_dispatch:
  push:
    branches: [ develop ]
    paths-ignore: 
      - '**.md'
  pull_request:
    branches: [ develop ]
    paths-ignore: 
      - '**.md'

jobs:
  build_base:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 3.1.x

      - name: Build - Dotnet Build Release
        run: dotnet build --configuration Release
        working-directory: src

        #Build and prepare build tool
      - name: Publish build tool - ADB
        working-directory: src/ADB
        run: dotnet publish -c Release

      - name: Self test build tool - ADB
        working-directory: src/ADB/bin/Release/netcoreapp3.1/publish
        run: ./ADB --version

      - name: Pack ADB - ADB
        working-directory: src/ADB/bin/Release/netcoreapp3.1/publish
        run: zip -r ADB.zip . -x \*.pdb

      - name: Upload ADB - Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ADB
          path: src/ADB/bin/Release/netcoreapp3.1/publish/ADB.zip
        
  build_variant:
    name: Variant
    runs-on: ubuntu-latest
    needs: [build_base]
    strategy:
      matrix:
        os: [win-x64, linux-x64]
        configuration: [Release]
        project: [Aves]
    
    steps:
      - uses: actions/checkout@v4
          
      - name: Download ADB - Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: ADB
          path: temp_artf/ADB
             
      - name: Unzip ADB
        run: unzip temp_artf/ADB/ADB.zip -d build
      
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 3.1.x
              
      - name: Publish ${{ matrix.os }} ${{ matrix.configuration }} - dotnet publish 
        working-directory: src/${{ matrix.project }}
        run: dotnet publish -c ${{ matrix.configuration }} -r ${{ matrix.os }} /p:PublishSingleFile=true
                
      - name: Download dependencies of ${{ matrix.os }} - ADB
        working-directory: build
        run: ./ADB -c config.json --rid ${{ matrix.os }} --bc ${{ matrix.configuration }}
        timeout-minutes: 3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Pack ${{ matrix.os }} - Zip
        working-directory: src/${{ matrix.project }}/bin/${{ matrix.configuration }}/netcoreapp3.1/${{ matrix.os }}/publish/
        run: zip -r ${{ matrix.project }}.zip . -x \*.pdb
        
      - name: Upload ${{ matrix.project }}-${{ matrix.os }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.project }}-${{ matrix.os }}
          path: ./src/${{ matrix.project }}/bin/${{ matrix.configuration }}/netcoreapp3.1/${{ matrix.os }}/publish/${{ matrix.project }}.zip
