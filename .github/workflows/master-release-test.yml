name: Test CI

on: 
  push:
    branches: 
      - master-release-test

# Don't use a cache here: 
#  This is the last instance that can detect missing dependecies

jobs:
  build_release:
    name: Base
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
        
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.102
      
      - name: Build - Dotnet Build Release
        run: dotnet build --configuration Release
        
        #Build and prepare build tool
      - name: Publish build tool - ADB
        working-directory: ADB
        run: dotnet publish -c Release
      
      - name: Self test build tool - ADB
        working-directory: ADB/bin/Release/netcoreapp3.1/publish
        run: ./ADB --version
      
      - name: Pack ADB - ADB
        working-directory: ADB/bin/Release/netcoreapp3.1/publish
        run: zip -r ADB.zip . -x \*.pdb
        
      - name: Upload ADB - Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: ADB
          path: ADB/bin/Release/netcoreapp3.1/publish/ADB.zip
                      
     # - name: Move build tool to build folder - ADB
      #  run: cp ADB/bin/Release/netcoreapp3.1/publish/* build
      
      - name: Release - Create Draft for Release
        id: create_draft
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Save Asset Upload URL to File
        shell: bash
        run: |
          echo ${{ steps.create_draft.outputs.upload_url }} > asset_upload_url.txt
        
      - name: Upload Asset Upload URL - Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: asset_upload_url
          path: asset_upload_url.txt

  build_release_variants:
    name: Variants
    runs-on: ubuntu-latest
    needs: [build_release]
    strategy:
      matrix:
        os: [win-x64, linux-x64, osx-x64]
        configuration: [Release]
    
    steps:
      - uses: actions/checkout@v1
      
      - name: Download Asset Upload URL - Download Artifact
        uses: actions/download-artifact@v1
        with:
          name: asset_upload_url
          path: asset_upload_url.txt
          
      - name: Download ADB - Download Artifact
        uses: actions/download-artifact@v1
        with:
          name: ADB
          path: ADB.zip
          
      - name: DEBUG
        run: ls -lha
                  
      - name: Unzip ADB
        run: unzip ADB.zip -d build
          
      - name: Fake steps.create_draft.outputs.upload_url from predecessor
        id: create_draft
        run: echo "::set-output name=upload_url::$(cat asset_upload_url.txt)"
      
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.102
              
      - name: Publish ${{ matrix.os }} ${{ matrix.configuration }} - Dotnet Publish 
        working-directory: Aves
        run: dotnet publish -c ${{ matrix.configuration }} -r ${{ matrix.os }} /p:PublishSingleFile=true
                
      - name: Download dependencies of ${{ matrix.os }} - ADB
        working-directory: build
        run: ./ADB -c config.json --rid ${{ matrix.os }} --bc ${{ matrix.configuration }}
        timeout-minutes: 3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
        #Ignore pdb files
      - name: Pack ${{ matrix.os }} - Zip
        working-directory: Aves/bin/${{ matrix.configuration }}/netcoreapp3.1/${{ matrix.os }}/publish/
        run: zip -r Aves.zip . -x \*.pdb
        
      - name: Release win-x64 - Upload Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_draft.outputs.upload_url }} 
          asset_path: ./Aves/bin/${{ matrix.configuration }}/netcoreapp3.1/${{ matrix.os }}/publish/Aves.zip
          asset_name: Aves-${{ matrix.os }}.zip
          asset_content_type: application/zip
  
